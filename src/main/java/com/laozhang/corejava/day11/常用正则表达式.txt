正则表达式: 负责的字符串匹配处理规则, 应用广泛.
  学习建议: 1 要能够读懂"正则表达式"
           2 能够写出简单的"正则表达式"
           3 不要过多的分配学习时间!
  可以应用于: java grep vi
  1 字符集: [1234] 表示 1,2,3,4 之一
            [^12] 表示除了 1,2
            [1-5] 表示 1,2,3,4,5
            [a-f] 表示 a-f 之间的
            [0-9a-fA-F] 表示:一个16进制字符
    预定义字符集:
            \d : [0-9]
            . : 任意字符
            \w: 单词字符 [0-9a-zA-Z_]
            \s: 匹配空白: \t \n \r \b \p
            
            \D
            \S
            \W
            
            ^[\w\$]{8,15}$
            
            ^\d{1,3},\s{0,}\d{1,3}$
            
            1,2
            123, 321
            12,    345
            
            af  ,  f1  十六进制坐标 ffff,ffff
            
            
            
            ,\s+
            ^\d+,\s*\d+$
            
        ^\d{2,4},\s?\d{2,4}$    
  2 {m,n} 数词
       {n}
       {m,n}
       ? : {0,1}
       + : {1,}
       * : {0,}
  
  3 ^ 开头
    $ 结尾  

^\d(,|\s)\s*\d$
^\d[,\s]\s*\d$
^\d(,\s*|\s+)\d$
2,3
2,  3 
2 3
2   3

^\d{15}(\d{2}[\dxX])?$

//1000:宁丽娟:1234:13810381038:ninglj@tarena.com.cn
^\d{4}:.{2,4}:\w+:\d{11}:\w+([-+._]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$

  
邮政编码: ^[0-9][0-9][0-9][0-9][0-9][0-9]$
         ^[0-9]{6}$
         ^\d{6}$
         
用户名规则: ^\w{8,10}$
电话号码可能有3-4位区号: 0415-5561111 
^(\d{3,4}-)?\d{8}$
电话号:  +86 13912345678
        ^(\+86)?\s?\d{11}$
身份证号码: ^\d{15}(\d{2}[0-9xX])?$
一个点的坐标: ^\d+(,\s*|\s+)\d+$ 
            ^\d+[,\s]\s*\d+$ 
           34,266 
           3, 2
           3 2
           3  2
           
           A(abcd|defg)
           
           Aabcd Adefg
           A[abcd]
           Aa
           Ab
           Ac
           Ad
           
           
  日期: 2011-01-30 
       ^\d{4}-\d{2}-\d{2}$
       ^\d{4}(-\d{2}){2}$

  IP 地址: 192.168.0.2
          ^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$
          ^\d{1,3}(\.\d{1,3}){3}$
          ^(\d{1,3}\.){3}\d{1,3}$
           
String 对正则表达式的支持
  .matches() 匹配正则表达式
  .split("[,\s\|]") 切分字符串为字符串数组
  .replaceAll()

Integer.parseInt() 转换到字符串到整数: 如: "23"-> 23
青青子衿, 悠悠我心, 但为君故, 沉吟至今 


常用正则表达式 

正则表达式用于字符串处理、表单验证等场合，实用高效。现将一些常用的表达式收集于此，以备不时之需。

匹配中文字符的正则表达式： [\u4e00-\u9fa5]
评注：匹配中文还真是个头疼的事，有了这个表达式就好办了

匹配双字节字符(包括汉字在内)：[^\x00-\xff]
评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）

匹配空白行的正则表达式：\n\s*\r
评注：可以用来删除空白行

匹配HTML标记的正则表达式：<(\S*?)[^>]*>.*?</\1>|<.*? />
评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力

匹配首尾空白字符的正则表达式：^\s*|\s*$
评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式

匹配Email地址的正则表达式：\w+([-+._]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*
评注：表单验证时很实用

匹配网址URL的正则表达式：[a-zA-z]+://[^\s]*
评注：网上流传的版本功能很有限，上面这个基本可以满足需求

匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$
评注：表单验证时很实用

匹配国内电话号码：\d{3}-\d{8}|\d{4}-\d{7}
评注：匹配形式如 0511-4405222 或 021-87888822

匹配腾讯QQ号：[1-9][0-9]{4,}
评注：腾讯QQ号从10000开始

匹配中国邮政编码：[1-9]\d{5}(?!\d)
评注：中国邮政编码为6位数字

匹配身份证：\d{15}|\d{18}
评注：中国的身份证为15位或18位

匹配ip地址：\d+\.\d+\.\d+\.\d+
评注：提取ip地址时有用

匹配特定数字：
^[1-9]\d*$　 　 //匹配正整数
^-[1-9]\d*$ 　 //匹配负整数
^-?[1-9]\d*$　　 //匹配整数
^[1-9]\d*|0$　 //匹配非负整数（正整数 + 0）
^-[1-9]\d*|0$　　 //匹配非正整数（负整数 + 0）
^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$　　 //匹配正浮点数
^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$　 //匹配负浮点数
^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$　 //匹配浮点数
^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$　　 //匹配非负浮点数（正浮点数 + 0）
^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$　　//匹配非正浮点数（负浮点数 + 0）
评注：处理大量数据时有用，具体应用时注意修正

匹配特定字符串：
^[A-Za-z]+$　　//匹配由26个英文字母组成的字符串
^[A-Z]+$　　//匹配由26个英文字母的大写组成的字符串
^[a-z]+$　　//匹配由26个英文字母的小写组成的字符串
^[A-Za-z0-9]+$　　//匹配由数字和26个英文字母组成的字符串
^\w+$　　//匹配由数字、26个英文字母或者下划线组成的字符串
评注：最基本也是最常用的一些表达式





◇ 7.匹配ip地址 

匹配ip地址，你试试这个。
但是还有一个IP格式没有满足，比如：256.275.285.295，我们都知道，IP地址最大是不可以超过255的。请高手指点，有什么办法解决这个问题，先谢谢。
\b(([0-9]{0,3})\.){3}[0-9]{0,3}\b 


0-255匹配：
25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9]
简化为
25[0-5]|2[0-4][0-9]|(1[0-9]|[1-9])?[0-9] 

2007-8-30 20:35:21 回复该留言 

这个错了
匹配身份证：\d{15}|\d{18}

18位身份证号的末位可能是字母 

(?!^0*$)(?!^0*\.0*$)^\d{1,1}(\d{1,2})?$
这个判断正整数小于1000的正则表达式

