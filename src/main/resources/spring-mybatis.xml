<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans  
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
  http://www.springframework.org/schema/context  
  http://www.springframework.org/schema/context/spring-context-3.1.xsd  
  http://www.springframework.org/schema/tx 
  http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
  http://www.springframework.org/schema/mvc  
  http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
  
  <!-- 引入jdbc配置文件 --> 
  <context:property-placeholder location="classpath*:*.properties"/>
  
  <!--创建jdbc数据源 --> 
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
  	<property name="driverClassName" value="${driver}"/>
  	<property name="url" value="${url}"/>
  	<property name="username" value="${username}"></property>
  	<property name="password" value="${password}"></property>
  	<property name="initialSize" value="${initialSize}"></property>
  	<property name="maxActive" value="${maxActive}"></property>
  	<property name="maxIdle" value="${maxIdle}"></property>
  	<property name="minIdle" value="${minIdle}"/>
  	<property name="maxWait" value="${maxWait}"></property>
  </bean>
  
  <!-- 创建SqlSessionFactory，同时指定数据源-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  	<property name="dataSource" ref="dataSource"/>
  	<property name="mapperLocations" value="classpath:map/*Mapper.xml"></property>
  </bean>
  
  <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
  <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>
  
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="save*" propagation="REQUIRED" isolation="READ_COMMITTED"/> 
      <tx:method name="add*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="insert*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED" read-only="true"/>
    </tx:attributes>
  </tx:advice> 
  
  <aop:config>
    <aop:pointcut id="serviceMethod" expression="execution(* com.laozhang.service..*.*(..))"/>
    <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/> 
  </aop:config>
  
  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  	<constructor-arg index="0" ref="sqlSessionFactory"/>
  </bean>
  
</beans>
